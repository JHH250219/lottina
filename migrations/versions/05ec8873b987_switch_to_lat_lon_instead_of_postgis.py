"""switch to lat/lon instead of PostGIS

Revision ID: 05ec8873b987
Revises: 
Create Date: 2025-09-07 11:42:16.918618

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '05ec8873b987'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=True),
    sa.Column('street', sa.String(length=160), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('country', sa.String(length=2), server_default='DE', nullable=False),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_locations_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_locations_postal_code'), ['postal_code'], unique=False)

    op.create_table('organizers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('summary', sa.String(length=400), nullable=True),
    sa.Column('type', sa.Enum('event', 'community', 'permanent', name='offer_type'), server_default='event', nullable=False),
    sa.Column('starts_at', sa.DateTime(), nullable=True),
    sa.Column('ends_at', sa.DateTime(), nullable=True),
    sa.Column('always_open', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('opening_hours', sa.JSON(), nullable=True),
    sa.Column('holiday_hours', sa.JSON(), nullable=True),
    sa.Column('maps_url', sa.String(length=500), nullable=True),
    sa.Column('meeting_point', sa.String(length=200), nullable=True),
    sa.Column('is_outdoor', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('is_indoor', sa.Boolean(), server_default='true', nullable=True),
    sa.Column('target_age_min', sa.Integer(), nullable=True),
    sa.Column('target_age_max', sa.Integer(), nullable=True),
    sa.Column('with_accompaniment', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('is_free', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('price_min', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('price_max', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), server_default='EUR', nullable=True),
    sa.Column('hobby_regular', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('is_once', sa.Boolean(), server_default='true', nullable=True),
    sa.Column('is_sporty', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('is_creative', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('pets_allowed', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('source_name', sa.String(length=120), nullable=True),
    sa.Column('source_type', sa.Enum('manual', 'crawler', 'ocr', name='source_type'), server_default='manual', nullable=False),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', name='offer_status'), server_default='draft', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('organizer_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organizer_id'], ['organizers.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('offers', schema=None) as batch_op:
        batch_op.create_index('idx_offers_dates', ['starts_at', 'ends_at'], unique=False)
        batch_op.create_index('idx_offers_filters', ['is_free', 'is_outdoor', 'is_sporty', 'is_creative', 'pets_allowed'], unique=False)
        batch_op.create_index(batch_op.f('ix_offers_ends_at'), ['ends_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_offers_starts_at'), ['starts_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_offers_title'), ['title'], unique=False)

    op.create_table('offer_categories',
    sa.Column('offer_id', sa.UUID(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], ondelete='CASCADE')
    )
    op.create_table('offer_tags',
    sa.Column('offer_id', sa.UUID(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('offer_tags')
    op.drop_table('offer_categories')
    with op.batch_alter_table('offers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_offers_title'))
        batch_op.drop_index(batch_op.f('ix_offers_starts_at'))
        batch_op.drop_index(batch_op.f('ix_offers_ends_at'))
        batch_op.drop_index('idx_offers_filters')
        batch_op.drop_index('idx_offers_dates')

    op.drop_table('offers')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('organizers')
    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_locations_postal_code'))
        batch_op.drop_index(batch_op.f('ix_locations_city'))

    op.drop_table('locations')
    op.drop_table('categories')
    # ### end Alembic commands ###
