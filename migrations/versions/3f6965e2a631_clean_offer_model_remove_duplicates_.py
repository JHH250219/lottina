"""clean Offer model (remove duplicates, drop JSONB cats/tags, unify dates)

Revision ID: 3f6965e2a631
Revises: c4d0dbab065b
Create Date: 2025-09-13 12:06:47.898253

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3f6965e2a631'
down_revision = 'c4d0dbab065b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('categories_slug_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_categories_slug'), ['slug'], unique=True)

    with op.batch_alter_table('offer_categories', schema=None) as batch_op:
        batch_op.alter_column('offer_id',
               existing_type=sa.UUID(),
               nullable=False)
        batch_op.alter_column('category_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('offer_tags', schema=None) as batch_op:
        batch_op.alter_column('offer_id',
               existing_type=sa.UUID(),
               nullable=False)
        batch_op.alter_column('tag_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('offers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_offers_ends_at'))
        batch_op.drop_index(batch_op.f('ix_offers_starts_at'))
        batch_op.drop_index(batch_op.f('idx_offers_dates'))
        batch_op.create_index('idx_offers_dates', ['dt_start', 'dt_end'], unique=False)
        batch_op.create_index(batch_op.f('ix_offers_location_id'), ['location_id'], unique=False)
        batch_op.drop_column('always_open')
        batch_op.drop_column('ends_at')
        batch_op.drop_column('starts_at')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('tags_name_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_tags_name'), ['name'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_name'))
        batch_op.create_unique_constraint(batch_op.f('tags_name_key'), ['name'])

    with op.batch_alter_table('offers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('starts_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ends_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('always_open', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_offers_location_id'))
        batch_op.drop_index('idx_offers_dates')
        batch_op.create_index(batch_op.f('idx_offers_dates'), ['starts_at', 'ends_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_offers_starts_at'), ['starts_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_offers_ends_at'), ['ends_at'], unique=False)

    with op.batch_alter_table('offer_tags', schema=None) as batch_op:
        batch_op.alter_column('tag_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('offer_id',
               existing_type=sa.UUID(),
               nullable=True)

    with op.batch_alter_table('offer_categories', schema=None) as batch_op:
        batch_op.alter_column('category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('offer_id',
               existing_type=sa.UUID(),
               nullable=True)

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categories_slug'))
        batch_op.create_unique_constraint(batch_op.f('categories_slug_key'), ['slug'])

    # ### end Alembic commands ###
